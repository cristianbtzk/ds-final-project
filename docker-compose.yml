version: '3'

services:
  ds-mongoservice:
    build:
      dockerfile: .
      context: ./mongodb-service
    image: ds-mongoservice-image
    restart: unless-stopped
    container_name: ds-mongoservice1
    ports:
      - "4000:4000"
    networks:
      - ds-network
    volumes:
      - ./mongodb-service:/usr/src/api
    depends_on:
      - food-order-mongo1
      - food-order-mongo2
      - food-order-mongo3
  facade-api:
    build:
      dockerfile: .
      context: ./facade-api
    image: ds-facade-image
    container_name: ds-facade-api
    ports:
      - "8000:8000"
    networks:
      - ds-network
    volumes:
      - ./facade-api:/usr/src/api
    depends_on:
      - api
  api:
    build:
      dockerfile: .
      context: ./api
    image: ds-image
    container_name: ds-api
    ports:
      - "3334:3337"
    networks:
      - ds-network
    volumes:
      - ./api:/usr/src/api
    environment:
      - API=1
    depends_on:
      - food-order-mongo1
      - food-order-mongo2
      - food-order-mongo3
  api2:
    build:
      dockerfile: .
      context: ./api
    image: ds-image
    container_name: ds-api-2
    ports:
      - "3335:3337"
    networks:
      - ds-network
    volumes:
      - ./api:/usr/src/api
    environment:
      - API=2
    depends_on:
      - food-order-mongo1
      - food-order-mongo2
      - food-order-mongo3
  food-order-mongo1:
    container_name: food-order-mongo1
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
    ports:
      - 27017:27017
    networks:
      - ds-network
    depends_on:
      - food-order-mongo2
      - food-order-mongo3
    links:
      - food-order-mongo2
      - food-order-mongo3
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  food-order-mongo2:
    container_name: food-order-mongo2
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27018:27017
    networks:
      - ds-network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  food-order-mongo3:
    container_name: food-order-mongo3
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27019:27017
    networks:
      - ds-network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  
  app:
    build:
      dockerfile: .
      context: ./client
    image: ds-client-image
    container_name: ds-client-web
    ports:
      - '3000:3000'
    volumes:
      - ./client:/usr/src/app
    networks:
      - ds-network
  nginx:
    restart: always
    container_name: ds-api-nginx
    build:
      context: ./nginx
    ports:
        - "3333:80"
    networks:
      - ds-network
    depends_on:
      - api
      - api2
volumes:
  db:

networks:
  ds-network:
    driver: bridge



    